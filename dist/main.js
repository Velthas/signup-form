(()=>{"use strict";var n={426:(n,o,r)=>{r.d(o,{Z:()=>m});var e=r(537),t=r.n(e),i=r(645),A=r.n(i),a=r(667),s=r.n(a),d=new URL(r(420),r.b),c=new URL(r(156),r.b),l=A()(t()),p=s()(d),f=s()(c);l.push([n.id,':root {\n    --logo-backdrop: rgba(0, 0, 0, 0.5);\n    --logo-color: whitesmoke;\n    --form-side-backdrop: #f9fafb;\n    --form-background: whitesmoke;\n    --button-standard: #205154;\n    --box-shadow-color: #e7e7e8;\n    --error-form-color: red;\n    --system-font: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n}\n\nhtml {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n\n    height: 100%;\n    width: 100%;\n\n    font-family: var(--system-font);\n}\n\nbody {\n    margin: 0;\n}\n\nbody,\n.main {\n    width: 100%;\n    height: 100%;\n}\n\n@font-face {\n    font-family: \'norse-bold\';\n    src: url('+p+");\n}\n\n.flex-row {\n    display: flex;\n}\n\n.wrap {\n    flex-wrap: wrap;\n}\n\n.center {\n    align-items: center;\n    justify-content: center;\n}\n\n.flex-column {\n    display: flex;\n    flex-direction: column;\n}\n\n.space-between {\n    justify-content: space-between;\n    align-items: center;\n} \n\n.main > div:nth-child(1) {\n    width: 40%;\n    height: 100%;\n\n    background-image: url("+f+");\n    background-position: center;\n    background-size: cover;\n}\n\ndiv.logo {\n    background-color: var(--logo-backdrop);\n\n    position: relative;\n    top: 15%;\n    width: 100%;\n\n    gap: 8px;\n}\n\ndiv.logo > h1 {\n    font-family: 'norse-bold', 'Times New Roman', Times, serif;\n    color: var(--logo-color);\n\n    font-size: 4.5rem;\n\n    display: inline-block;\n\n    margin: 24px;\n}\n\nh1 + img {\n    height: 60px;\n\n    filter: contrast(0);\n}\n\ndiv.logo + div,\np a {\n    color: var(--logo-color); \n    font-size: 1rem;\n}\n\ndiv.form-side {\n    width: 60%;\n    height: 100%;\n    overflow: hidden;\n}\n\n.form-side > div:nth-child(2n + 1) {\n    height: 35%;\n\n    background-color: var(--form-side-backdrop);\n}\n\n.form-side > div:first-child {\n    font-size: 1.3rem;\n    font-weight: bold;\n\n    justify-content: flex-end;\n}\n\n.form-side div:first-child p:first-child {\n    margin: 10px 40px 10px 20px;\n}\n\n.form-side div:first-child p:last-child {\n    margin: 10px 40px 30px 20px;\n}\n\np span {\n    font-style: italic;\n}\n\n.form-side > div:nth-child(2) {\n\n    background-color: var(--form-background);\n    box-shadow: 0px 4px 4px var(--box-shadow-color);\n\n    padding: 8px 0px 8px 32px;\n\n    position: relative;\n    z-index: 300;\n}\n\nh2 {\n    font-size: 1.2rem;\n}\n\n.form-side > div:last-child {\n    padding: 16px 0px 0px 40px;\n\n    position: relative;\n}\n\n.form-side p:last-child a {\n    color: var(--button-standard);\n}\n\nbutton {\n    padding: 10px 20px;\n    background-color: var(--button-standard);\n\n    color: var(--logo-color);\n\n    border-radius: 4px;\n    border: 1px solid transparent;\n\n    font-weight: bold;\n    font-size: 1.1rem;\n\n    box-shadow: 0px 5px 4px var(--box-shadow-color);\n\n    cursor: pointer;\n}\n\nlabel {\n    text-transform: uppercase;\n\n    font-size: 0.8rem;\n\n    margin: 4px;\n}\n\nform div {\n    margin: 3px 20px;\n}\n\nform {\n    padding: 0px 30px 16px 0px;\n}\n\ninput {\n    width: 180px;\n    height: 20px;\n    border: 1px solid var(--box-shadow-color);\n}\n\ninput:focus-visible {\n    outline: none;\n    border: 1px solid var(--button-standard)\n}\n\n.error {\n    border: 1px solid var(--error-form-color);\n}\n\ninput[type=\"password\"].error {\n    border: 1px solid var(--error-form-color);\n}\n\nspan[class=\"error\"] {\n    font-size: 0.6rem;\n    color: var(--error-form-color);\n}\n\n@media screen and (min-width: 1300px) {\n\n    form {\n        margin-right: 200px;\n    }\n    \n}\n\n@media screen and (max-width: 860px ) {\n    body > div:first-child {\n        flex-direction: column;\n        width: auto;\n        height: auto;\n    }\n\n    .main > div:first-child p,\n    .main > div:first-child p > a {\n        font-size: 0.8rem;\n    }\n\n    .main > div:first-child {\n        height: 40vh;\n        width: 100%;\n    }\n\n    div.form-side {\n        height: auto;\n        width: 100%;\n    }\n\n    .form-side > div p {\n        font-size: 1.1rem;\n    }\n\n    .form-side div:first-child p:first-child {\n        margin-top: 20px;\n    }\n\n    .form-side > div:last-child button {\n        margin-top: 20px;\n    }\n}\n\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,mCAAmC;IACnC,wBAAwB;IACxB,6BAA6B;IAC7B,6BAA6B;IAC7B,0BAA0B;IAC1B,2BAA2B;IAC3B,uBAAuB;IACvB,4JAA4J;AAChK;;AAEA;IACI,UAAU;IACV,SAAS;IACT,sBAAsB;;IAEtB,YAAY;IACZ,WAAW;;IAEX,+BAA+B;AACnC;;AAEA;IACI,SAAS;AACb;;AAEA;;IAEI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,yBAAyB;IACzB,4CAAgC;AACpC;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,mBAAmB;IACnB,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,8BAA8B;IAC9B,mBAAmB;AACvB;;AAEA;IACI,UAAU;IACV,YAAY;;IAEZ,yDAAwC;IACxC,2BAA2B;IAC3B,sBAAsB;AAC1B;;AAEA;IACI,sCAAsC;;IAEtC,kBAAkB;IAClB,QAAQ;IACR,WAAW;;IAEX,QAAQ;AACZ;;AAEA;IACI,0DAA0D;IAC1D,wBAAwB;;IAExB,iBAAiB;;IAEjB,qBAAqB;;IAErB,YAAY;AAChB;;AAEA;IACI,YAAY;;IAEZ,mBAAmB;AACvB;;AAEA;;IAEI,wBAAwB;IACxB,eAAe;AACnB;;AAEA;IACI,UAAU;IACV,YAAY;IACZ,gBAAgB;AACpB;;AAEA;IACI,WAAW;;IAEX,2CAA2C;AAC/C;;AAEA;IACI,iBAAiB;IACjB,iBAAiB;;IAEjB,yBAAyB;AAC7B;;AAEA;IACI,2BAA2B;AAC/B;;AAEA;IACI,2BAA2B;AAC/B;;AAEA;IACI,kBAAkB;AACtB;;AAEA;;IAEI,wCAAwC;IACxC,+CAA+C;;IAE/C,yBAAyB;;IAEzB,kBAAkB;IAClB,YAAY;AAChB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,0BAA0B;;IAE1B,kBAAkB;AACtB;;AAEA;IACI,6BAA6B;AACjC;;AAEA;IACI,kBAAkB;IAClB,wCAAwC;;IAExC,wBAAwB;;IAExB,kBAAkB;IAClB,6BAA6B;;IAE7B,iBAAiB;IACjB,iBAAiB;;IAEjB,+CAA+C;;IAE/C,eAAe;AACnB;;AAEA;IACI,yBAAyB;;IAEzB,iBAAiB;;IAEjB,WAAW;AACf;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,0BAA0B;AAC9B;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,yCAAyC;AAC7C;;AAEA;IACI,aAAa;IACb;AACJ;;AAEA;IACI,yCAAyC;AAC7C;;AAEA;IACI,yCAAyC;AAC7C;;AAEA;IACI,iBAAiB;IACjB,8BAA8B;AAClC;;AAEA;;IAEI;QACI,mBAAmB;IACvB;;AAEJ;;AAEA;IACI;QACI,sBAAsB;QACtB,WAAW;QACX,YAAY;IAChB;;IAEA;;QAEI,iBAAiB;IACrB;;IAEA;QACI,YAAY;QACZ,WAAW;IACf;;IAEA;QACI,YAAY;QACZ,WAAW;IACf;;IAEA;QACI,iBAAiB;IACrB;;IAEA;QACI,gBAAgB;IACpB;;IAEA;QACI,gBAAgB;IACpB;AACJ",sourcesContent:[':root {\n    --logo-backdrop: rgba(0, 0, 0, 0.5);\n    --logo-color: whitesmoke;\n    --form-side-backdrop: #f9fafb;\n    --form-background: whitesmoke;\n    --button-standard: #205154;\n    --box-shadow-color: #e7e7e8;\n    --error-form-color: red;\n    --system-font: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n}\n\nhtml {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n\n    height: 100%;\n    width: 100%;\n\n    font-family: var(--system-font);\n}\n\nbody {\n    margin: 0;\n}\n\nbody,\n.main {\n    width: 100%;\n    height: 100%;\n}\n\n@font-face {\n    font-family: \'norse-bold\';\n    src: url(./fonts/Norse-Bold.otf);\n}\n\n.flex-row {\n    display: flex;\n}\n\n.wrap {\n    flex-wrap: wrap;\n}\n\n.center {\n    align-items: center;\n    justify-content: center;\n}\n\n.flex-column {\n    display: flex;\n    flex-direction: column;\n}\n\n.space-between {\n    justify-content: space-between;\n    align-items: center;\n} \n\n.main > div:nth-child(1) {\n    width: 40%;\n    height: 100%;\n\n    background-image: url(./images/cute.jpg);\n    background-position: center;\n    background-size: cover;\n}\n\ndiv.logo {\n    background-color: var(--logo-backdrop);\n\n    position: relative;\n    top: 15%;\n    width: 100%;\n\n    gap: 8px;\n}\n\ndiv.logo > h1 {\n    font-family: \'norse-bold\', \'Times New Roman\', Times, serif;\n    color: var(--logo-color);\n\n    font-size: 4.5rem;\n\n    display: inline-block;\n\n    margin: 24px;\n}\n\nh1 + img {\n    height: 60px;\n\n    filter: contrast(0);\n}\n\ndiv.logo + div,\np a {\n    color: var(--logo-color); \n    font-size: 1rem;\n}\n\ndiv.form-side {\n    width: 60%;\n    height: 100%;\n    overflow: hidden;\n}\n\n.form-side > div:nth-child(2n + 1) {\n    height: 35%;\n\n    background-color: var(--form-side-backdrop);\n}\n\n.form-side > div:first-child {\n    font-size: 1.3rem;\n    font-weight: bold;\n\n    justify-content: flex-end;\n}\n\n.form-side div:first-child p:first-child {\n    margin: 10px 40px 10px 20px;\n}\n\n.form-side div:first-child p:last-child {\n    margin: 10px 40px 30px 20px;\n}\n\np span {\n    font-style: italic;\n}\n\n.form-side > div:nth-child(2) {\n\n    background-color: var(--form-background);\n    box-shadow: 0px 4px 4px var(--box-shadow-color);\n\n    padding: 8px 0px 8px 32px;\n\n    position: relative;\n    z-index: 300;\n}\n\nh2 {\n    font-size: 1.2rem;\n}\n\n.form-side > div:last-child {\n    padding: 16px 0px 0px 40px;\n\n    position: relative;\n}\n\n.form-side p:last-child a {\n    color: var(--button-standard);\n}\n\nbutton {\n    padding: 10px 20px;\n    background-color: var(--button-standard);\n\n    color: var(--logo-color);\n\n    border-radius: 4px;\n    border: 1px solid transparent;\n\n    font-weight: bold;\n    font-size: 1.1rem;\n\n    box-shadow: 0px 5px 4px var(--box-shadow-color);\n\n    cursor: pointer;\n}\n\nlabel {\n    text-transform: uppercase;\n\n    font-size: 0.8rem;\n\n    margin: 4px;\n}\n\nform div {\n    margin: 3px 20px;\n}\n\nform {\n    padding: 0px 30px 16px 0px;\n}\n\ninput {\n    width: 180px;\n    height: 20px;\n    border: 1px solid var(--box-shadow-color);\n}\n\ninput:focus-visible {\n    outline: none;\n    border: 1px solid var(--button-standard)\n}\n\n.error {\n    border: 1px solid var(--error-form-color);\n}\n\ninput[type="password"].error {\n    border: 1px solid var(--error-form-color);\n}\n\nspan[class="error"] {\n    font-size: 0.6rem;\n    color: var(--error-form-color);\n}\n\n@media screen and (min-width: 1300px) {\n\n    form {\n        margin-right: 200px;\n    }\n    \n}\n\n@media screen and (max-width: 860px ) {\n    body > div:first-child {\n        flex-direction: column;\n        width: auto;\n        height: auto;\n    }\n\n    .main > div:first-child p,\n    .main > div:first-child p > a {\n        font-size: 0.8rem;\n    }\n\n    .main > div:first-child {\n        height: 40vh;\n        width: 100%;\n    }\n\n    div.form-side {\n        height: auto;\n        width: 100%;\n    }\n\n    .form-side > div p {\n        font-size: 1.1rem;\n    }\n\n    .form-side div:first-child p:first-child {\n        margin-top: 20px;\n    }\n\n    .form-side > div:last-child button {\n        margin-top: 20px;\n    }\n}\n\n'],sourceRoot:""}]);const m=l},645:n=>{n.exports=function(n){var o=[];return o.toString=function(){return this.map((function(o){var r="",e=void 0!==o[5];return o[4]&&(r+="@supports (".concat(o[4],") {")),o[2]&&(r+="@media ".concat(o[2]," {")),e&&(r+="@layer".concat(o[5].length>0?" ".concat(o[5]):""," {")),r+=n(o),e&&(r+="}"),o[2]&&(r+="}"),o[4]&&(r+="}"),r})).join("")},o.i=function(n,r,e,t,i){"string"==typeof n&&(n=[[null,n,void 0]]);var A={};if(e)for(var a=0;a<this.length;a++){var s=this[a][0];null!=s&&(A[s]=!0)}for(var d=0;d<n.length;d++){var c=[].concat(n[d]);e&&A[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),r&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=r):c[2]=r),t&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=t):c[4]="".concat(t)),o.push(c))}},o}},667:n=>{n.exports=function(n,o){return o||(o={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),o.hash&&(n+=o.hash),/["'() \t\n]|(%20)/.test(n)||o.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var o=n[1],r=n[3];if(!r)return o;if("function"==typeof btoa){var e=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),t="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(e),i="/*# ".concat(t," */"),A=r.sources.map((function(n){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(n," */")}));return[o].concat(A).concat([i]).join("\n")}return[o].join("\n")}},379:n=>{var o=[];function r(n){for(var r=-1,e=0;e<o.length;e++)if(o[e].identifier===n){r=e;break}return r}function e(n,e){for(var i={},A=[],a=0;a<n.length;a++){var s=n[a],d=e.base?s[0]+e.base:s[0],c=i[d]||0,l="".concat(d," ").concat(c);i[d]=c+1;var p=r(l),f={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)o[p].references++,o[p].updater(f);else{var m=t(f,e);e.byIndex=a,o.splice(a,0,{identifier:l,updater:m,references:1})}A.push(l)}return A}function t(n,o){var r=o.domAPI(o);return r.update(n),function(o){if(o){if(o.css===n.css&&o.media===n.media&&o.sourceMap===n.sourceMap&&o.supports===n.supports&&o.layer===n.layer)return;r.update(n=o)}else r.remove()}}n.exports=function(n,t){var i=e(n=n||[],t=t||{});return function(n){n=n||[];for(var A=0;A<i.length;A++){var a=r(i[A]);o[a].references--}for(var s=e(n,t),d=0;d<i.length;d++){var c=r(i[d]);0===o[c].references&&(o[c].updater(),o.splice(c,1))}i=s}}},569:n=>{var o={};n.exports=function(n,r){var e=function(n){if(void 0===o[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}o[n]=r}return o[n]}(n);if(!e)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");e.appendChild(r)}},216:n=>{n.exports=function(n){var o=document.createElement("style");return n.setAttributes(o,n.attributes),n.insert(o,n.options),o}},565:(n,o,r)=>{n.exports=function(n){var o=r.nc;o&&n.setAttribute("nonce",o)}},795:n=>{n.exports=function(n){var o=n.insertStyleElement(n);return{update:function(r){!function(n,o,r){var e="";r.supports&&(e+="@supports (".concat(r.supports,") {")),r.media&&(e+="@media ".concat(r.media," {"));var t=void 0!==r.layer;t&&(e+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),e+=r.css,t&&(e+="}"),r.media&&(e+="}"),r.supports&&(e+="}");var i=r.sourceMap;i&&"undefined"!=typeof btoa&&(e+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),o.styleTagTransform(e,n,o.options)}(o,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(o)}}}},589:n=>{n.exports=function(n,o){if(o.styleSheet)o.styleSheet.cssText=n;else{for(;o.firstChild;)o.removeChild(o.firstChild);o.appendChild(document.createTextNode(n))}}},420:(n,o,r)=>{n.exports=r.p+"5efe60ef5042faec1224.otf"},156:(n,o,r)=>{n.exports=r.p+"905869a546ebb565c735.jpg"}},o={};function r(e){var t=o[e];if(void 0!==t)return t.exports;var i=o[e]={id:e,exports:{}};return n[e](i,i.exports,r),i.exports}r.m=n,r.n=n=>{var o=n&&n.__esModule?()=>n.default:()=>n;return r.d(o,{a:o}),o},r.d=(n,o)=>{for(var e in o)r.o(o,e)&&!r.o(n,e)&&Object.defineProperty(n,e,{enumerable:!0,get:o[e]})},r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),r.o=(n,o)=>Object.prototype.hasOwnProperty.call(n,o),(()=>{var n;r.g.importScripts&&(n=r.g.location+"");var o=r.g.document;if(!n&&o&&(o.currentScript&&(n=o.currentScript.src),!n)){var e=o.getElementsByTagName("script");e.length&&(n=e[e.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),r.p=n})(),r.b=document.baseURI||self.location.href,r.nc=void 0,(()=>{var n=r(379),o=r.n(n),e=r(795),t=r.n(e),i=r(569),A=r.n(i),a=r(565),s=r.n(a),d=r(216),c=r.n(d),l=r(589),p=r.n(l),f=r(426),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=A().bind(null,"head"),m.domAPI=t(),m.insertStyleElement=c(),o()(f.Z,m),f.Z&&f.Z.locals&&f.Z.locals;const u=document.querySelector("form"),h=document.querySelector("#pass"),C=document.querySelector("#passconfirm"),B=document.querySelector("input + span");function I(){return h.value===C.value}function x(n){B.classList.add("error"),h.classList.add("error"),C.classList.add("error"),B.textContent=n}function v(){B.classList.remove("error"),h.classList.remove("error"),C.classList.remove("error"),B.textContent=""}u.addEventListener("submit",(function(n){I()||(x("Password does not match"),n.preventDefault())})),h.addEventListener("input",(function(){I()?v():x("Password does not match")})),C.addEventListener("input",(function(){I()?v():x("Password does not match")}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,